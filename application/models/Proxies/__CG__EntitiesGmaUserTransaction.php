<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class GmaUserTransaction extends \Entities\GmaUserTransaction implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getUserTransactionId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["userTransactionId"];
        }
        $this->__load();
        return parent::getUserTransactionId();
    }

    public function setBillingAddress($billingAddress)
    {
        $this->__load();
        return parent::setBillingAddress($billingAddress);
    }

    public function getBillingAddress()
    {
        $this->__load();
        return parent::getBillingAddress();
    }

    public function setPostalCode($postalCode)
    {
        $this->__load();
        return parent::setPostalCode($postalCode);
    }

    public function getPostalCode()
    {
        $this->__load();
        return parent::getPostalCode();
    }

    public function setLocation($location)
    {
        $this->__load();
        return parent::setLocation($location);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }

    public function setState($state)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function setPhoneNo($phoneNo)
    {
        $this->__load();
        return parent::setPhoneNo($phoneNo);
    }

    public function getPhoneNo()
    {
        $this->__load();
        return parent::getPhoneNo();
    }

    public function setGmaTransactionId($gmaTransactionId)
    {
        $this->__load();
        return parent::setGmaTransactionId($gmaTransactionId);
    }

    public function getGmaTransactionId()
    {
        $this->__load();
        return parent::getGmaTransactionId();
    }

    public function setGmaMerchantId($gmaMerchantId)
    {
        $this->__load();
        return parent::setGmaMerchantId($gmaMerchantId);
    }

    public function getGmaMerchantId()
    {
        $this->__load();
        return parent::getGmaMerchantId();
    }

    public function setCreatedDate($createdDate)
    {
        $this->__load();
        return parent::setCreatedDate($createdDate);
    }

    public function getCreatedDate()
    {
        $this->__load();
        return parent::getCreatedDate();
    }

    public function setPaymentResponseStatus($paymentResponseStatus)
    {
        $this->__load();
        return parent::setPaymentResponseStatus($paymentResponseStatus);
    }

    public function getPaymentResponseStatus()
    {
        $this->__load();
        return parent::getPaymentResponseStatus();
    }

    public function setPaymentStatus($paymentStatus)
    {
        $this->__load();
        return parent::setPaymentStatus($paymentStatus);
    }

    public function getPaymentStatus()
    {
        $this->__load();
        return parent::getPaymentStatus();
    }

    public function setPortfolioId($portfolioId)
    {
        $this->__load();
        return parent::setPortfolioId($portfolioId);
    }

    public function getPortfolioId()
    {
        $this->__load();
        return parent::getPortfolioId();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'userTransactionId', 'billingAddress', 'postalCode', 'location', 'state', 'phoneNo', 'gmaTransactionId', 'gmaMerchantId', 'createdDate', 'paymentResponseStatus', 'paymentStatus', 'portfolioId');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}