<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class GmaUserAccountYodlee extends \Entities\GmaUserAccountYodlee implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getYodleeAccountId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["yodleeAccountId"];
        }
        $this->__load();
        return parent::getYodleeAccountId();
    }

    public function setContenerName($contenerName)
    {
        $this->__load();
        return parent::setContenerName($contenerName);
    }

    public function getContenerName()
    {
        $this->__load();
        return parent::getContenerName();
    }

    public function setItemid($itemid)
    {
        $this->__load();
        return parent::setItemid($itemid);
    }

    public function getItemid()
    {
        $this->__load();
        return parent::getItemid();
    }

    public function setItemAccountId($itemAccountId)
    {
        $this->__load();
        return parent::setItemAccountId($itemAccountId);
    }

    public function getItemAccountId()
    {
        $this->__load();
        return parent::getItemAccountId();
    }

    public function setAccountName($accountName)
    {
        $this->__load();
        return parent::setAccountName($accountName);
    }

    public function getAccountName()
    {
        $this->__load();
        return parent::getAccountName();
    }

    public function setLastUpadated($lastUpadated)
    {
        $this->__load();
        return parent::setLastUpadated($lastUpadated);
    }

    public function getLastUpadated()
    {
        $this->__load();
        return parent::getLastUpadated();
    }

    public function setAccountType($accountType)
    {
        $this->__load();
        return parent::setAccountType($accountType);
    }

    public function getAccountType()
    {
        $this->__load();
        return parent::getAccountType();
    }

    public function setAccountTypeId($accountTypeId)
    {
        $this->__load();
        return parent::setAccountTypeId($accountTypeId);
    }

    public function getAccountTypeId()
    {
        $this->__load();
        return parent::getAccountTypeId();
    }

    public function setAccountNumber($accountNumber)
    {
        $this->__load();
        return parent::setAccountNumber($accountNumber);
    }

    public function getAccountNumber()
    {
        $this->__load();
        return parent::getAccountNumber();
    }

    public function setTotalBalance($totalBalance)
    {
        $this->__load();
        return parent::setTotalBalance($totalBalance);
    }

    public function getTotalBalance()
    {
        $this->__load();
        return parent::getTotalBalance();
    }

    public function setAccountHolder($accountHolder)
    {
        $this->__load();
        return parent::setAccountHolder($accountHolder);
    }

    public function getAccountHolder()
    {
        $this->__load();
        return parent::getAccountHolder();
    }

    public function setCash($cash)
    {
        $this->__load();
        return parent::setCash($cash);
    }

    public function getCash()
    {
        $this->__load();
        return parent::getCash();
    }

    public function setMoneyMarketBalance($moneyMarketBalance)
    {
        $this->__load();
        return parent::setMoneyMarketBalance($moneyMarketBalance);
    }

    public function getMoneyMarketBalance()
    {
        $this->__load();
        return parent::getMoneyMarketBalance();
    }

    public function setMarginBalance($marginBalance)
    {
        $this->__load();
        return parent::setMarginBalance($marginBalance);
    }

    public function getMarginBalance()
    {
        $this->__load();
        return parent::getMarginBalance();
    }

    public function setHoldingType($holdingType)
    {
        $this->__load();
        return parent::setHoldingType($holdingType);
    }

    public function getHoldingType()
    {
        $this->__load();
        return parent::getHoldingType();
    }

    public function setTickerSymbol($tickerSymbol)
    {
        $this->__load();
        return parent::setTickerSymbol($tickerSymbol);
    }

    public function getTickerSymbol()
    {
        $this->__load();
        return parent::getTickerSymbol();
    }

    public function setQuantity($quantity)
    {
        $this->__load();
        return parent::setQuantity($quantity);
    }

    public function getQuantity()
    {
        $this->__load();
        return parent::getQuantity();
    }

    public function setPrice($price)
    {
        $this->__load();
        return parent::setPrice($price);
    }

    public function getPrice()
    {
        $this->__load();
        return parent::getPrice();
    }

    public function setValue($value)
    {
        $this->__load();
        return parent::setValue($value);
    }

    public function getValue()
    {
        $this->__load();
        return parent::getValue();
    }

    public function setCuisp($cuisp)
    {
        $this->__load();
        return parent::setCuisp($cuisp);
    }

    public function getCuisp()
    {
        $this->__load();
        return parent::getCuisp();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setCreatedDate($createdDate)
    {
        $this->__load();
        return parent::setCreatedDate($createdDate);
    }

    public function getCreatedDate()
    {
        $this->__load();
        return parent::getCreatedDate();
    }

    public function setPortfolio(\Entities\GmaPortfolio $portfolio = NULL)
    {
        $this->__load();
        return parent::setPortfolio($portfolio);
    }

    public function getPortfolio()
    {
        $this->__load();
        return parent::getPortfolio();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'yodleeAccountId', 'contenerName', 'itemid', 'itemAccountId', 'accountName', 'lastUpadated', 'accountType', 'accountTypeId', 'accountNumber', 'totalBalance', 'accountHolder', 'cash', 'moneyMarketBalance', 'marginBalance', 'holdingType', 'tickerSymbol', 'quantity', 'price', 'value', 'cuisp', 'description', 'createdDate', 'portfolio');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}