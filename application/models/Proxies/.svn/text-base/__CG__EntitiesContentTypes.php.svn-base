<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ContentTypes extends \Entities\ContentTypes implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setShortName($shortName)
    {
        $this->__load();
        return parent::setShortName($shortName);
    }

    public function getShortName()
    {
        $this->__load();
        return parent::getShortName();
    }

    public function setLayout($layout)
    {
        $this->__load();
        return parent::setLayout($layout);
    }

    public function getLayout()
    {
        $this->__load();
        return parent::getLayout();
    }

    public function setPageHead($pageHead)
    {
        $this->__load();
        return parent::setPageHead($pageHead);
    }

    public function getPageHead()
    {
        $this->__load();
        return parent::getPageHead();
    }

    public function setThemeLayout($themeLayout)
    {
        $this->__load();
        return parent::setThemeLayout($themeLayout);
    }

    public function getThemeLayout()
    {
        $this->__load();
        return parent::getThemeLayout();
    }

    public function setDynamicRoute($dynamicRoute)
    {
        $this->__load();
        return parent::setDynamicRoute($dynamicRoute);
    }

    public function getDynamicRoute()
    {
        $this->__load();
        return parent::getDynamicRoute();
    }

    public function setRequired($required)
    {
        $this->__load();
        return parent::setRequired($required);
    }

    public function getRequired()
    {
        $this->__load();
        return parent::getRequired();
    }

    public function setAccess($access)
    {
        $this->__load();
        return parent::setAccess($access);
    }

    public function getAccess()
    {
        $this->__load();
        return parent::getAccess();
    }

    public function setRestrictTo($restrictTo)
    {
        $this->__load();
        return parent::setRestrictTo($restrictTo);
    }

    public function getRestrictTo()
    {
        $this->__load();
        return parent::getRestrictTo();
    }

    public function setRestrictAdminAccess($restrictAdminAccess)
    {
        $this->__load();
        return parent::setRestrictAdminAccess($restrictAdminAccess);
    }

    public function getRestrictAdminAccess()
    {
        $this->__load();
        return parent::getRestrictAdminAccess();
    }

    public function setEnableVersioning($enableVersioning)
    {
        $this->__load();
        return parent::setEnableVersioning($enableVersioning);
    }

    public function getEnableVersioning()
    {
        $this->__load();
        return parent::getEnableVersioning();
    }

    public function setMaxRevisions($maxRevisions)
    {
        $this->__load();
        return parent::setMaxRevisions($maxRevisions);
    }

    public function getMaxRevisions()
    {
        $this->__load();
        return parent::getMaxRevisions();
    }

    public function setEntriesAllowed($entriesAllowed)
    {
        $this->__load();
        return parent::setEntriesAllowed($entriesAllowed);
    }

    public function getEntriesAllowed()
    {
        $this->__load();
        return parent::getEntriesAllowed();
    }

    public function setCategoryGroupId($categoryGroupId)
    {
        $this->__load();
        return parent::setCategoryGroupId($categoryGroupId);
    }

    public function getCategoryGroupId()
    {
        $this->__load();
        return parent::getCategoryGroupId();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'shortName', 'layout', 'pageHead', 'themeLayout', 'dynamicRoute', 'required', 'access', 'restrictTo', 'restrictAdminAccess', 'enableVersioning', 'maxRevisions', 'entriesAllowed', 'categoryGroupId');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}